@model CircularLogic.Models.StaticPage

@{
    ViewBag.Title = "UpdateStaticPage";
}

@using (Html.BeginForm("UpdateStaticPage", "StaticPage", FormMethod.Post, new { @class = "form-horizontal" }))
{

    <div class="form-horizontal">
        <h3>Update Static Page</h3>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.StaticID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StaticID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StaticID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.TextAreaFor(model => model.HtmlContent, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HtmlContent, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HtmlContent, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Image.ImageData, new { @class = "control-label" })
            @Html.EditorFor(model => model.Image.ImageData, new { HtmlAttributes = new { @class = "form-control" } })

            @Html.ValidationMessageFor(model => model.Image.ImageData, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Image.Name, new { @class = "control-label" })
        @Html.EditorFor(model => model.Image.Name, new { HtmlAttributes = new { @class = "form-control" } })

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
    <input type="submit" value-="Edit" class="btn btn-success" style="margin-left: 50px" />
</div>

@section Scripts {
    <script src="~/scripts/tinymce/tinymce.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/app/jquery-validate-defaults.js"></script>
    <script src="~/Scripts/app/blogPostValidation.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            tinyMCE.init({
                mode: "textareas",
                theme: "modern",
                convert_newlines_to_brs: true
            });
        });
    </script>
}