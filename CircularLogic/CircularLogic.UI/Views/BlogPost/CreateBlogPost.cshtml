@model CircularLogic.UI.Models.BlogPostViewModel

@{
    ViewBag.Title = "CreateBlogPost";
}

<h2>CreateBlogPost</h2>

@using (Html.BeginForm("CreateBlogPost", "BlogPost", FormMethod.Post, new {@class="form-horizontal"}))
{

    <h4>Blog Post</h4>
    <hr/>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    <div class="form-group">
        @Html.LabelFor(model => model.BlogPost.Title, new {@class = "control-label "})
        @Html.EditorFor(model => model.BlogPost.Title, new { HtmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.BlogPost.Title, "", new {@class = "text-danger"})
    </div>

    <div class="form-group">
        @Html.TextAreaFor(model => model.BlogPost.HtmlContent)
    </div>

    <div class="form-group">
        @*@Html.LabelFor(model => model.BlogPost.Tags,new {@class = "control-label"})*@
        <input type="text" name="tags" placeholder="Tags" class="tagsManager form-control"/>
        <input type="hidden" value="" name="hiddenTagList">
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.BlogPost.Image.Name, new {@class = "control-label"})
        @Html.EditorFor(model => model.BlogPost.Image.Name, new { HtmlAttributes = new { @class = "form-control" } })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.BlogPost.Image.ImageData, new { @class = "control-label" })
        @Html.EditorFor(model => model.BlogPost.Image.ImageData, new { HtmlAttributes = new { @class = "form-control" } })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.BlogPost.Category, new {@class = "control-label"})
        @Html.DropDownListFor(model => model.BlogPost.Category.Name, Model.CategoryList, new { @class = "form-control" })
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default"/>
        </div>
    </div>

}
@section scripts
{
    <script src="~/scripts/tinymce/tinymce.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/app/jquery-validate-defaults.js"></script>
    <script src="~/Scripts/app/blogPostValidation.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            tinyMCE.init({
                mode: "textareas",
                theme: "modern"
            });
        });
    </script>
    <script src="~/Scripts/app/bootstrap3-typeahead.min.js"></script>
    <script src="~/Scripts/app/bootstrap-tagmanager.js"></script>
    <script type="text/javascript">
        $(function () {
            $(".tagsManager").tagsManager({
                prefilled: [],
                CapitalizeFirstLetter: true,
                preventSubmitOnEnter: true,
                typeahead: true,
                typeaheadAjaxSource: null,
                typeaheadSource: ["MVC", "JavaScript", "SQL", ".NET/C#", "Web APIs", "Databases", "Project Management", "Web Development", "Jr Deveeloper"],
                delimeters: [44, 188, 13],
                backspace: [8],
                blinkBGColor_1: '#FFFF9C',
                blinkBGColor_2: '#CDE69C',
                hiddenTagListName: 'hiddenTagListA'
            });
        });
    </script>
}